name: learn-github-actions
on: [push]
jobs:      

  Firmware-Software-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2      
 
      - name: Setup global constants & environment variables
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
          COMMIT_TIMESTAMP: ${{ github.event.commits[0].timestamp }}
          COMMIT_MESSAGE: ${{ github.event.commits[0].message }}
        run: |
          echo $EVENT_CONTEXT      
          echo $COMMIT_TIMESTAMP     
          echo $COMMIT_MESSAGE     

      - name: Setup Python 3.10.1      
        uses: actions/setup-python@v2
        with:
            python-version: '3.10.1' # Version range or exact version of a Python version to use, using SemVer's version range syntax
            architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified 
            
      - name: Upgrade pip and install Python libraries
        run: python -m pip install --upgrade pip
             pip install --upgrade firebase_admin
             pip install dateutil
             
      - name: Upgrade pip and install Firebase Admin SDK python libraries
        run: python -m pip install --upgrade pip
             pip install --upgrade firebase_admin  
             
      # - name: Firebase - Python function
        # run: python Python_Scripts/firebase_write.py             

      - name: Decrypt confidential credentials GPG file - Google cloud service account
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output $GITHUB_WORKSPACE/Python_Scripts/Private-key.json Python_Scripts/firebase-key.json.gpg     
        env:
            GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}} 
          
      - name: Decrypt confidential credentials GPG file - Wifi, Cloud messaging, Storage bucket
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output $GITHUB_WORKSPACE/Excavator/credentials.h Excavator/firebase-key-excavator.gpg
        env:
            GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}

      - name: Setup s/w build - Arduino CLI framework
        uses: arduino/setup-arduino-cli@v1 
        
      - name: Setup build ENVIRONMENT and CONFIGURATION file
        run: |
          arduino-cli config init       
          arduino-cli config set sketch.always_export_binaries true

      - name: ESP32 - Update core and download libraries ESP32 modules & boards
        run: |
          arduino-cli config set board_manager.additional_urls https://dl.espressif.com/dl/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32

      - name: Google's Firebase - Download & Install library for ESP32 
        run: |
          arduino-cli lib install "Firebase Arduino Client Library for ESP8266 and ESP32"  
          
      - name: Adafruit PWM Servo Driver - Download & Install library
        run: |
          arduino-cli lib install "Adafruit PWM Servo Driver Library" 
          arduino-cli lib install "movingAvg"
      
      - name: Compile & build binary firmware file
        run: |
          arduino-cli compile --fqbn esp32:esp32:esp32 -e $GITHUB_WORKSPACE/Excavator/Excavator.ino --build-property build.partitions=min_spiffs --build-property upload.maximum_size=1966080 --verbose

      - name: Upload new firmware - Python function
        run: |
          python Python_Scripts/firebase_upload_firmware.py $GITHUB_WORKSPACE/Excavator/build/esp32.esp32.esp32/Excavator.ino.bin            